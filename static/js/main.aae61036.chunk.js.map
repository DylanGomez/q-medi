{"version":3,"sources":["images/q-medi-logo.png","serviceWorker.js","pages/homePage/home.js","pages/courierPage/courier.js","pages/servicePage/service.js","pages/contactFom/contactForm.js","pages/header/header.js","constants/routes.js","index.js"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","Home","react_default","a","createElement","className","src","logo","alt","Component","Courier","Service","ContactForm","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","changeHandler","event","name","target","value","setState","defineProperty","state","buttonPressed","companyName","initials","lastName","address","postcode","place","country","email","phoneNumber","bind","assertThisInitialized","_this2","Form","Control","size","type","placeholder","onChange","required","main_default","onPhoneNumberChange","status","countryData","number","id","preferredCountries","onlyCountries","as","rows","Button","variant","onClick","mailService","disabled","Spinner","animation","Header","react_router_dom","to","activeClassName","RouterForms","header_header","react_router","path","component","ReactDOM","render","routes","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.aae61036.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/q-medi-logo.cd00886e.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\nimport logo from \"../../images/q-medi-logo.png\"\nimport \"./home.scss\";\n\nclass Home extends Component {\n\n    render() {\n        return (\n            <div>\n                <div className=\"wrapper\">\n                    <div className=\"upperDiv\">\n                        <img src={logo} className=\"logo\" alt=\"\" />\n                    </div>\n                    <div className=\"lowerDiv\">Tekst</div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Home","import React, { Component } from 'react';\nimport logo from \"../../images/q-medi-logo.png\"\nimport \"./courier.scss\";\n\nclass Courier extends Component {\n\n    render() {\n        return (\n            <div>\n                <div className=\"wrapper\">\n                    <div className=\"upperDiv\">\n                        <img src={logo} className=\"logo\" alt=\"\" />\n                    </div>\n                    <div className=\"lowerDivCourier\">\n                        <h1>Q-Couriers</h1>\n                        <p>\n                            Even snel een pakje wegbrengen: dat kunnen alle koeriersbedrijven wel.\n                                Maar Q-Couriers gaat verder.\n                        </p>\n                        <p>\n                            Of het nu om een zending gaat die met spoed opgehaald of geleverd\n                            moet worden of om een zending met een langere aanlevertijd, wij\n                            verzorgen deze altijd netjes en snel. Hiervoor hebben wij een keurig\n                            (eigen schoon en rookvrij) wagenpark tot onze beschikking. Al onze diensten\n                            worden centraal gecoördineerd vanuit Maarsbergen.\n                            Wij werken met vaste representatieve chauffeurs die betrouwbaar en loyaal aan de opdrachtgevers zijn!\n                        </p>\n                        <p>\n                            Q-Couriers heeft zich gespecialiseerd in het transporteren van medische\n                            instrumenten en implantaten van A naar B, maar ook het reguliere koeriers\n                            werk kunnen wij voor u verzorgen.\n                        </p>\n                        <p>\n                            Uw zending wordt door ons op de voet gevolgd. We werken met een modern volgsysteem en we houden voortdurend contact met de chauffeurs.\n                            Op die manier kunnen we sneller schakelen en uw opdracht wordt mestal door één persoon afgehandeld.\n                            Wij dragen onze zendingen nooit over aan derden.\n                        </p>\n                    \n                        <h1>Zelfde dag levering</h1>\n                        <p>\n                            Uw zending wordt binnen één werkdag opgehaald en afgeleverd bij u of uw klant.\n                            - Bezorging in heel Nederland (België en Duitsland prijs op aanvraag)\n                            - Wij berekenen alleen de daadwerkelijke gereden kilometers (enkel)\n                            - Afwijkend aflevertijdstip mogelijk\n                            - Tarief tot 40 kg, daarna toeslag ≥ 4 = € 2,50 per kist\n                            - Grotere afmetingen en gewichten op aanvraag\n                            - Toeslag zon- en feestdagen 75%\n                        </p>\n                        <p>\n                            Laden / lossen langer dan 15 min: 1e kwartier € 10,00, daarna € 7,50 per kwartier met een maximum van € 27,50 per uur.\n                        </p>\n                        <p>\n                            Voor prijzen / offerte kunt u contact met ons opnemen.\n                        </p>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Courier","import React, { Component } from 'react';\nimport logo from \"../../images/q-medi-logo.png\"\n\n\nclass Service extends Component {\n\n    render(){\n        return (\n            <div>\n                 <div className=\"wrapper\">\n                    <div className=\"upperDiv\">\n                        <img src={logo} className=\"logo\" alt=\"\" />\n                    </div>\n                    <div className=\"lowerDiv\">Tekst</div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Service","import React, { Component } from 'react';\nimport logo from \"../../images/q-medi-logo.png\"\nimport { Form, Button, Spinner } from 'react-bootstrap';\nimport IntlTelInput from 'react-intl-tel-input';\nimport './contactForm.scss';\nimport * as emailjs from 'emailjs-com';\n\nclass ContactForm extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            buttonPressed: false,\n            companyName: \"\",\n            initials: \"\",\n            lastName: \"\",\n            address: \"\",\n            postcode: \"\",\n            place: \"\",\n            country: \"\",\n            email: \"\",\n            phoneNumber: \"\",\n\n        }\n        this.changeHandler = this.changeHandler.bind(this);\n    }\n\n    onChange(value) {\n        this.setState({\n            phoneNumber: value\n        });\n    }\n\n    changeHandler = event => {\n\n        const name = event.target.name;\n        const value = event.target.value;\n\n        this.setState({\n            [name]: value\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"wrapper\">\n                    <div className=\"upperDiv\">\n                        <img src={logo} className=\"logo\" alt=\"\" />\n                    </div>\n                    <div className=\"lowerDiv\">\n                        <div className=\"formArea\">\n                            <div className=\"formAreaRight\">\n                                <span className=\"whoText\">Contact formulier</span>\n                                <br />\n\n                                <Form.Control className=\"formField\" name=\"companyName\" size=\"lg\" type=\"text\" placeholder=\"Bedrijf/Naam\" onChange={this.changeHandler} required/>\n\n                                <Form.Control className=\"formField\" name=\"initials\" size=\"lg\" type=\"text\" placeholder=\"Voorletters\" onChange={this.changeHandler} required/>\n\n                                <Form.Control className=\"formField\" name=\"lastName\" size=\"lg\" type=\"text\" placeholder=\"Achternaam\" onChange={this.changeHandler} required/>\n\n                                <Form.Control className=\"formField\" name=\"address\" size=\"lg\" type=\"text\" placeholder=\"Adres\" onChange={this.changeHandler} required/>\n\n                                <Form.Control className=\"formField\" name=\"postcode\" size=\"lg\" type=\"text\" placeholder=\"Postcode\" onChange={this.changeHandler} required/>\n\n                                <Form.Control className=\"formField\" name=\"place\" size=\"lg\" type=\"text\" placeholder=\"Woonplaats\" onChange={this.changeHandler} required/>\n\n                                <Form.Control className=\"formField\" name=\"country\" size=\"lg\" type=\"text\" placeholder=\"Land\" onChange={this.changeHandler} required/>\n\n                                <Form.Control className=\"formField\" name=\"email\" size=\"lg\" type=\"text\" placeholder=\"E-mail\" onChange={this.changeHandler} required/>\n\n                                <IntlTelInput\n                                    className=\"telephoneInput\"\n                                    name=\"phoneNumber\"\n                                    onPhoneNumberChange={(status, value, countryData, number, id) => {\n                                        this.onChange(number);\n                                    }}\n                                    preferredCountries={['nl']}\n                                    onlyCountries={['nl', 'be']}\n                                />\n\n                                <Form.Control className=\"area\" as=\"textarea\" name=\"comments\" placeholder=\"Vragen of opmerkingen\" rows=\"3\" />\n\n                                {!this.state.buttonPressed &&\n                                    <Button variant=\"success\" size=\"lg\" onClick={this.mailService}>Verstuur</Button>\n                                }\n                                {this.state.buttonPressed &&\n                                    <Button variant=\"success\" size=\"lg\" disabled>\n                                        <Spinner animation=\"border\" />\n                                    </Button>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ContactForm","import React, { Component } from 'react';\nimport \"./header.scss\";\nimport {\n    NavLink\n} from 'react-router-dom'\n\n\nclass Header extends Component {\n\n    render() {\n        return (\n                <div className=\"header\">\n                    <div className=\"options-div\">\n                        <div className=\"options\">\n                            <div className=\"link-wrapper\"><NavLink to=\"/home\" className=\"link\" activeClassName='active'>Home</NavLink></div>\n                            <div className=\"link-wrapper\"><NavLink to=\"/courier\" className=\"link\" activeClassName='active'>Courier</NavLink></div>\n                            <div className=\"link-wrapper\"><NavLink to=\"/services\" className=\"link\" activeClassName='active'> Diensten</NavLink></div>\n                            <div className=\"link-wrapper\"><NavLink to=\"/contact\" className=\"link\" activeClassName='active'>Contact</NavLink></div>\n                        </div>\n                    </div>\n                </div>\n        )\n    }\n}\n\nexport default Header","import React from 'react'\nimport {\n    HashRouter,\n    Route,\n} from 'react-router-dom'\nimport Home from '../pages/homePage/home';\nimport Courier from '../pages/courierPage/courier';\nimport Service from '../pages/servicePage/service';\nimport ContactForm from '../pages/contactFom/contactForm';\nimport Header from '../pages/header/header';\n\n\nconst RouterForms = () => (\n    <HashRouter>\n        <div>\n            <Header> </Header>\n            <Route path=\"/home\" component={Home} />\n            <Route path=\"/courier\" component={Courier} />\n            <Route path=\"/services\" component={Service} />\n            <Route path=\"/contact\" component={ContactForm} />\n            <footer className=\"footer\">\n                    <div className=\"footer-content\">Q-Medistore BV \n                    <br/>\n                    Postbus 54 3950 AB Maarn</div>\n            </footer>\n        </div>\n    </HashRouter>\n)\nexport default RouterForms","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport Router from './constants/routes';\nimport 'react-intl-tel-input/dist/main.css';\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\nReactDOM.render(\n    <Router>\n       \n    </Router>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}